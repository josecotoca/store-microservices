// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Store.Api.ShopinCart.Persistence;

#nullable disable

namespace Store.Api.ShopinCart.Persistence.Migrations
{
    [DbContext(typeof(ContextCart))]
    partial class ContextCartModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Store.Api.ShopinCart.Persistence.Entities.Sale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("ChargeTax")
                        .HasColumnType("double precision")
                        .HasColumnName("charge_tax");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date");

                    b.Property<DateTime?>("DateDelivered")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_delivered");

                    b.Property<string>("Delivered")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("delivered");

                    b.Property<string>("InvoiceName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("invoice_name");

                    b.Property<string>("InvoiceNit")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("invoice_nit");

                    b.Property<string>("Observation")
                        .HasColumnType("text")
                        .HasColumnName("observation");

                    b.Property<double>("SubTotal")
                        .HasColumnType("double precision")
                        .HasColumnName("subtotal");

                    b.Property<double>("Total")
                        .HasColumnType("double precision")
                        .HasColumnName("total");

                    b.HasKey("Id");

                    b.ToTable("sales");
                });

            modelBuilder.Entity("Store.Api.ShopinCart.Persistence.Entities.SaleDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("ChargeTax")
                        .HasColumnType("double precision")
                        .HasColumnName("charge_tax");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<double>("Price")
                        .HasColumnType("double precision")
                        .HasColumnName("price");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer")
                        .HasColumnName("product_id");

                    b.Property<double>("Quantity")
                        .HasColumnType("double precision")
                        .HasColumnName("quantity");

                    b.Property<int>("SaleId")
                        .HasColumnType("integer")
                        .HasColumnName("sale_id");

                    b.Property<double>("SubTotal")
                        .HasColumnType("double precision")
                        .HasColumnName("subtotal");

                    b.Property<double>("Total")
                        .HasColumnType("double precision")
                        .HasColumnName("total");

                    b.HasKey("Id");

                    b.HasIndex("SaleId");

                    b.ToTable("sales_details");
                });

            modelBuilder.Entity("Store.Api.ShopinCart.Persistence.Entities.SaleDetail", b =>
                {
                    b.HasOne("Store.Api.ShopinCart.Persistence.Entities.Sale", "sale")
                        .WithMany()
                        .HasForeignKey("SaleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("sale");
                });
#pragma warning restore 612, 618
        }
    }
}
